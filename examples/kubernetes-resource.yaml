apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  selector:
    matchLabels:
      app: myapp
  replicas: 1
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - image: ravindrasingh6969/nodeapp:latest
        name: myapp
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: myapp
spec:
  ports:
  - port: 80 #service port  #kubeproxy will open port on worker node to which can route traffic to alb
    targetPort: 8080 #container port
    protocol: TCP
  type: NodePort
  selector:
    app: myapp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/group.order: '1'
    alb.ingress.kubernetes.io/group.name: myapp
    # alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    # alb.ingress.kubernetes.io/ssl-redirect: '443'
    # alb.ingress.kubernetes.io/certificate-arn: ""
spec:
  ingressClassName: alb
  rules:
    - host: myapp.ravindra.tech
      http:
        paths:
          - path: /
            pathType: Exact
            backend:
              service:
                name: myapp
                port:
                  number: 80
    - host: myapp.ravindra.tech
      http:
        paths:
          - path: /ping
            pathType: Prefix
            backend:
              service:
                name: myapp
                port:
                  number: 80
    - host: myapp.ravindra.tech
      http:
        paths:
          - path: /metrics
            pathType: Prefix
            backend:
              service:
                name: myapp
                port:
                  number: 80                  
